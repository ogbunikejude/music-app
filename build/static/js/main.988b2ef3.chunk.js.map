{"version":3,"sources":["banner.png","mp.png","component/Tracklist.jsx","App.js","reportWebVitals.js","index.js"],"names":["Track","props","useState","lyrics","setLyrics","open","setOpen","btn","useRef","className","src","mp","track","track_name","artist_name","track_id","onClick","current","value","Axios","get","then","response","data","message","body","lyrics_body","ref","App","tracks","setTracks","setCurrentTrack","useEffect","axios","res","track_list","href","image","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAAe,MAA0B,mCCA1B,MAA0B,+BCiD1BA,MA3Cf,SAAeC,GAAQ,IAAD,EACOC,mBAAS,MADhB,mBACbC,EADa,KACNC,EADM,OAEGF,oBAAS,GAFZ,mBAEbG,EAFa,KAERC,EAFQ,KAOhBC,EAAKC,iBAAO,MAiBf,OACC,sBAAKC,UAAU,MAAf,UACA,qBAAKC,IAAKC,IACV,8CAAiBV,EAAMW,MAAMA,MAAMC,cAErC,yCAAYZ,EAAMW,MAAMA,MAAME,eAC9B,2CAAcb,EAAMW,MAAMA,MAAMG,YAChC,wBAAQN,UAAU,SAASO,QAtBP,SAACD,GACnBA,EAASR,EAAIU,QAAQC,MAErBC,IAAMC,IAAI,mGAAqGL,EAArG,4CACTM,MAAM,SAACC,GACNlB,EAAUkB,EAASC,KAAKC,QAAQC,KAAKtB,OAAOuB,aAC5CpB,GAASD,OAgBqCsB,IAAKpB,EAAKW,MAAOjB,EAAMW,MAAMA,MAAMG,SAArF,yBACA,sBAAKN,UAAWJ,EAAO,UAAY,YAAnC,UACF,sBAAMI,UAAU,OAAOO,QA7BD,WAClBV,GAASD,IA4Bb,eACA,8CACA,4BAAIJ,EAAMW,MAAMA,MAAMC,aACtB,8BAAMV,W,MCkCSyB,MAnEf,WAAgB,IAAD,EACe1B,mBAAS,MADxB,mBACN2B,EADM,KACEC,EADF,OAE2B5B,mBAAS,MAFpC,mBAEQ6B,GAFR,WAwBb,OArBEC,qBAAU,WAEdC,IAAMb,IADgB,+LACFC,MAAK,SAACa,GACtBJ,EAAUI,EAAIX,KAAKC,QAAQC,KAAKU,iBAG7B,IAEHH,qBAAU,WAKRC,IAAMb,IAFS,6IAEMC,MAAK,SAACa,GACzBH,EAAgBG,EAAIX,KAAKC,QAAQC,KAAKtB,aAEvC,IAMH,sBAAKM,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACA,mBAAG2B,KAAK,IAAI3B,UAAU,OAAtB,6BACA,gCACE,mBAAG2B,KAAK,IAAR,kBACA,mBAAGA,KAAK,IAAR,qBACA,mBAAGA,KAAK,IAAR,oBACA,mBAAGA,KAAK,IAAR,8BAKN,yBAAS3B,UAAU,SAAnB,SACE,qBAAKA,UAAU,UAAf,SACA,qBAAKC,IAAK2B,QAGZ,yBAAS5B,UAAU,aAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,gBAAd,6BACA,oBAAIA,UAAU,mBAAd,2CACA,qBAAKA,UAAU,MAAf,SACR,qBAAKA,UAAU,aAAf,SACA,8BACWoB,EAASA,EAAOS,KAAI,SAAC1B,GAAD,OAAW,cAAC,EAAD,CAAOA,MAAOA,EAAOmB,gBAAiBA,OAAsB,0DChDzFQ,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.988b2ef3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.1715e7df.png\";","export default __webpack_public_path__ + \"static/media/mp.2b19b39c.png\";","import Axios from 'axios'\r\nimport React, { useRef, useState } from 'react'\r\nimport mp from '../mp.png'\r\n// import showLyrics from './lyrics'\r\n\r\n\r\nfunction Track(props) {\r\n  const [lyrics,setLyrics] = useState(null)\r\n  const [open,setOpen] = useState(false) \r\n\r\n  const displayblock= () => {\r\n    setOpen(!open)\r\n  }\r\n  let btn= useRef(null)\r\n\r\n  const handleclick = (track_id) => {\r\n    track_id=btn.current.value\r\n    const API_KEY= 'apikey=fddd8ab1808d8700b4112d8f508a8659'\r\n    Axios.get('https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=' + track_id + '&' + API_KEY )\r\n    .then ((response) => {\r\n      setLyrics(response.data.message.body.lyrics.lyrics_body)\r\n      setOpen(!open)\r\n    })\r\n\r\n    // props.setCurrentTrack(props.lyrics)\r\n  \r\n  }\r\n    \r\n  \r\n   \r\n   return (         \r\n    <div className=\"row\">\r\n    <img src={mp}/>\r\n    <h4>Track name: {props.track.track.track_name}</h4>\r\n   \r\n  <p>Artist: {props.track.track.artist_name}</p>\r\n  <p>Track ID: {props.track.track.track_id}</p>\r\n  <button className=\"button\" onClick= {handleclick} ref={btn} value={props.track.track.track_id} >Show Lyrics</button>\r\n  <div className={open ? 'display' : 'undisplay'}>\r\n<span className=\"exit\" onClick = {displayblock }>X</span>\r\n<h2>Track Lyrics</h2>\r\n<p>{props.track.track.track_name}</p>\r\n<div>{lyrics}</div>\r\n  </div>\r\n\r\n</div>\r\n   )\r\n}\r\n\r\nexport default Track\r\n","\nimport React from 'react'\nimport { useEffect, useState } from \"react\"\nimport axios from 'axios'\nimport image from './banner.png'\nimport Track from './component/Tracklist'\n// import showLyrics from './component/lyrics'\nimport './App.css';\n\nfunction App() {\n  const [tracks, setTracks] = useState(null)\n  const [currentTrack, setCurrentTrack] = useState(null)\n    useEffect(function() {\n        const API_URL='https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/chart.tracks.get?chart_name=top&page=1&page_size=10&country=us&f_has_lyrics=1&apikey=fddd8ab1808d8700b4112d8f508a8659'\naxios.get(API_URL) .then((res) => {\n    setTracks(res.data.message.body.track_list)\n})\n\n    }, [])\n\n    useEffect(function() {\n      const id= '201234497'\n      const API_KEY= 'fddd8ab1808d8700b4112d8f508a8659'\n      const API_URL1='https://cors-anywhere.herokuapp.com/https://api.musixmatch.com/ws/1.1/track.lyrics.get?track_id=' + id + API_KEY\n\n      axios.get(API_URL1) .then((res)=> {\n        setCurrentTrack(res.data.message.body.lyrics)\n      })\n    }, [])\n\n    \n\n    \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"container\">\n          <div className=\"Row\">\n          <a href=\"#\" className=\"logo\">Jude Music Blog</a>\n          <nav>\n            <a href=\"#\">Home</a>\n            <a href=\"#\">Charts </a>\n            <a href=\"#\">Lyrics</a>\n            <a href=\"#\">Latest</a>\n          </nav>\n          </div>\n        </div>\n      </header>\n      <section className=\"banner\" >\n        <div className=\"banner1\"> \n        <img src={image} />\n        </div>\n      </section>\n      <section className=\"track-list\">\n        <div className=\"container\">\n          <h1 className=\"section-title\">US Music Chart </h1>\n          <h3 className=\"subsection-title\">Top Trending Tracks in the US</h3>\n          <div className=\"row\">\n  <div className=\"music-card\">\n  <div>\n            {tracks ? tracks.map((track) => <Track track={track} setCurrentTrack={setCurrentTrack}/>) : <p>loading...</p>}\n           \n        </div>\n       \n        </div>\n\n  </div>\n\n</div>\n          \n  \n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}